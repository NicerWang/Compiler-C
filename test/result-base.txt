->ROOT
-->Function|Int
--->ID:printf
--->Parameters: 
--->Statement>COMPOUND
---->Statement>DECLARE
----->Type: Int
----->Statement>ASSIGN
------>ID:n
------>Number:5
---->Statement>RET
----->ID:n
-->Function|Int
--->ID:scanf
--->Parameters: 
--->Statement>COMPOUND
---->Statement>RET
----->Number:0
-->EntryPoint
--->Statement>COMPOUND
---->Statement>DECLARE
----->Type: Int
----->Statement>ASSIGN
------>ID:m
------>Number:2
---->Statement>DECLARE
----->Type: Int
----->Statement>ASSIGN
------>ID:n
------>Number:3
---->Statement>CALLtemp1
----->ID:scanf
----->Arguments: 
Parameters: 
------>String:"%d"
------>Expression
------->Operator> & 
------->ID:m
---->Statement>CALLtemp4
----->ID:printf
----->Arguments: 
Parameters: 
------>String:"%d\n"
------>Expression
------->Expression
-------->ID:m
-------->Operator> + 
-------->Number:100
------->Operator> % 
------->Number:2
---->Statement>DECLARE
----->Type: Int
----->Statement>ASSIGN
------>ID:i
------>Number:0
---->Statement>DECLARE
----->Type: Int
----->Statement>ASSIGN
------>ID:factorial
------>Number:3
---->Statement>DECLARE
----->Type: Int
----->Statement>ASSIGN
------>ID:result
------>Number:1
---->Statement>WHILE
----->Expression
------>ID:factorial
------>Operator> > 
------>Number:0
----->Statement>COMPOUND
------>Statement>ASSIGN
------->ID:result
------->Expression
-------->ID:result
-------->Operator> * 
-------->ID:factorial
------>Statement>ASSIGN
------->ID:factorial
------->Expression
-------->ID:factorial
-------->Operator> - 
-------->Number:1
---->Statement>CALLtemp10
----->ID:printf
----->Arguments: 
Parameters: 
------>String:"%d\n"
------>Expression
------->Expression
-------->ID:result
-------->Operator> % 
-------->Number:100
------->Operator> - 
------->Number:1
---->Expression
----->ID:i
----->Operator> ++ 
---->Statement>FOR
----->Statement>DECLARE
------>Type: Int
------>Statement>ASSIGN
------->ID:j
------->Number:0
----->Expression
------>Expression
------->ID:result
------->Operator> % 
------->Number:100
------>Operator> - 
------>Number:1
----->Expression
------>ID:j
------>Operator> ++ 
----->Statement>COMPOUND
------>Statement>FOR
------->Statement>DECLARE
-------->Type: Int
-------->Statement>ASSIGN
--------->ID:k
--------->Expression
---------->ID:j
---------->Operator> + 
---------->Number:1
------->Expression
-------->ID:k
-------->Operator> < 
-------->Expression
--------->Expression
---------->ID:result
---------->Operator> % 
---------->Number:100
--------->Operator> - 
--------->Number:1
------->Expression
-------->Operator> ++ 
-------->ID:k
------->Statement>COMPOUND
-------->Statement>IF
--------->Expression
---------->Expression
----------->Expression
------------>ID:k
------------>Operator> - 
------------>Number:5
----------->Operator> == 
----------->ID:j
---------->Operator> || 
---------->Expression
----------->Expression
------------>Expression
------------->Expression
-------------->Operator> ! 
-------------->ID:j
------------->Operator> + 
------------->Number:2
------------>Operator> == 
------------>ID:k
----------->Operator> && 
----------->Expression
------------>Expression
------------->ID:k
------------->Operator> - 
------------->Number:3
------------>Operator> == 
------------>ID:j
--------->Statement>COMPOUND
---------->Statement>DECLARE
----------->Type: Int
----------->Statement>ASSIGN
------------>ID:i
------------>Number:0
---------->Statement>ASSIGN
----------->ID:i
----------->Expression
------------>ID:k
------------>Operator> % 
------------>Expression
------------->ID:j
------------->Operator> + 
------------->Number:1
---------->Statement>CALLtemp29
----------->ID:printf
----------->Arguments: 
Parameters: 
------------>String:"1: %d\n"
------------>ID:i
--------->Statement>IF
---------->Expression
----------->Expression
------------>ID:k
------------>Operator> == 
------------>Expression
------------->ID:j
------------->Operator> + 
------------->Number:3
----------->Operator> && 
----------->Expression
------------>Expression
------------->ID:k
------------->Operator> % 
------------->Number:2
------------>Operator> == 
------------>Number:0
---------->Statement>COMPOUND
----------->Statement>ASSIGN
------------>ID:i
------------>Expression
------------->ID:k
------------->Operator> / 
------------->Expression
-------------->ID:j
-------------->Operator> + 
-------------->Number:1
----------->Statement>CALLtemp37
------------>ID:printf
------------>Arguments: 
Parameters: 
------------->String:"2: %d\n"
------------->ID:i
---------->Statement>COMPOUND
----------->Statement>CALLtemp38
------------>ID:printf
------------>Arguments: 
Parameters: 
------------->String:"3: %d\n"
------------->ID:i
---->Statement>RET
----->Number:0
====== GRAMMER TREE ======
====== LEX RESULT ======
INT
ID printf 5341474112
LBS
RBS
LP
INT
ID n 5341496528
OP_ASSIGN
NUMBER 5
SEMI
RETURN
ID n 5341496528
SEMI
RP
INT
ID scanf 5341473360
LBS
RBS
LP
RETURN
NUMBER 0
SEMI
RP
INT
MAIN
LBS
RBS
LP
INT
ID m 5341496608
OP_ASSIGN
NUMBER 2
SEMI
INT
ID n 5341496640
OP_ASSIGN
NUMBER 3
SEMI
ID scanf 5341473360
LBS
COMMA
BIT_AND
ID m 5341496608
RBS
SEMI
ID printf 5341474112
LBS
COMMA
LBS
ID m 5341496608
OP_ADD
NUMBER 100
RBS
OP_MOD
NUMBER 2
RBS
SEMI
INT
ID i 5341496672
OP_ASSIGN
NUMBER 0
SEMI
INT
ID factorial 5341496736
OP_ASSIGN
NUMBER 3
SEMI
INT
ID result 5341496768
OP_ASSIGN
NUMBER 1
SEMI
WHILE
LBS
ID factorial 5341496736
GT
NUMBER 0
RBS
LP
ID result 5341496768
OP_ASSIGN
ID result 5341496768
OP_MUL
ID factorial 5341496736
SEMI
ID factorial 5341496736
OP_ASSIGN
ID factorial 5341496736
OP_SUB
NUMBER 1
SEMI
RP
ID printf 5341474112
LBS
COMMA
ID result 5341496768
OP_MOD
NUMBER 100
OP_SUB
NUMBER 1
RBS
SEMI
ID i 5341496672
OP_PP
SEMI
FOR
LBS
INT
ID j 5341496864
OP_ASSIGN
NUMBER 0
SEMI
ID result 5341496768
OP_MOD
NUMBER 100
OP_SUB
NUMBER 1
SEMI
ID j 5341496864
OP_PP
RBS
LP
FOR
LBS
INT
ID k 5341496928
OP_ASSIGN
ID j 5341496864
OP_ADD
NUMBER 1
SEMI
ID k 5341496928
LT
ID result 5341496768
OP_MOD
NUMBER 100
OP_SUB
NUMBER 1
SEMI
OP_PP
ID k 5341496928
RBS
LP
IF
LBS
ID k 5341496928
OP_SUB
NUMBER 5
EQ
ID j 5341496864
OR
NOT
ID j 5341496864
OP_ADD
NUMBER 2
EQ
ID k 5341496928
AND
ID k 5341496928
OP_SUB
NUMBER 3
EQ
ID j 5341496864
RBS
LP
INT
ID i 5341497056
OP_ASSIGN
NUMBER 0
SEMI
ID i 5341497056
OP_ASSIGN
ID k 5341496928
OP_MOD
LBS
ID j 5341496864
OP_ADD
NUMBER 1
RBS
SEMI
ID printf 5341474112
LBS
COMMA
ID i 5341497056
RBS
SEMI
RP
ELSE
IF
LBS
ID k 5341496928
EQ
ID j 5341496864
OP_ADD
NUMBER 3
AND
ID k 5341496928
OP_MOD
NUMBER 2
EQ
NUMBER 0
RBS
LP
ID i 5341496672
OP_ASSIGN
ID k 5341496928
OP_DIV
LBS
ID j 5341496864
OP_ADD
NUMBER 1
RBS
SEMI
ID printf 5341474112
LBS
COMMA
ID i 5341496672
RBS
SEMI
RP
ELSE
LP
ID printf 5341474112
LBS
COMMA
ID i 5341496672
RBS
SEMI
RP
RP
RP
RETURN
NUMBER 0
SEMI
RP
====== SYMBOL TABLE ======
INT n     5341496528
INT i     5341497056
INT k     5341496928
INT j     5341496864
INT result     5341496768
INT factorial     5341496736
INT i     5341496672
INT n     5341496640
INT m     5341496608
====== FUNCTIONS ======
printf     5341496432
scanf     5341496560
====== IntermediateCODE ======
1 [FUNC,printf,{},]
2 [DEC,n,5341496528, ]
3 [=,5341496528(n),5,]
4 [RET,5341496528(n),,]
5 [ENDF,printf,,]
6 [FUNC,scanf,{},]
7 [RET,0,,]
8 [ENDF,scanf,,]
9 [DEC,m,5341496608, ]
10 [=,5341496608(m),2,]
11 [DEC,n,5341496640, ]
12 [=,5341496640(n),3,]
13 [&,5341496608(m),,temp0]
14 [CALL,scanf,{"%d",temp0,},temp1]
15 [+,5341496608(m),100,temp2]
16 [%,temp2,2,temp3]
17 [CALL,printf,{"%d\n",temp3,},temp4]
18 [DEC,i,5341496672, ]
19 [=,5341496672(i),0,]
20 [DEC,factorial,5341496736, ]
21 [=,5341496736(factorial),3,]
22 [DEC,result,5341496768, ]
23 [=,5341496768(result),1,]
24 [>,5341496736(factorial),0,temp5]
25 [IFNZ,temp5,,27]
26 [JMP,,,32]
27 [*,5341496768(result),5341496736(factorial),temp6]
28 [=,5341496768(result),temp6,]
29 [-,5341496736(factorial),1,temp7]
30 [=,5341496736(factorial),temp7,]
31 [JMP,,,24]
32 [%,5341496768(result),100,temp8]
33 [-,temp8,1,temp9]
34 [CALL,printf,{"%d\n",temp9,},temp10]
35 [=,temp11,5341496672(i), ]
36 [+,5341496672(i),1,5341496672(i)]
37 [DEC,j,5341496864, ]
38 [=,5341496864(j),0,]
39 [%,5341496768(result),100,temp12]
40 [-,temp12,1,temp13]
41 [IFNZ,temp13,,43]
42 [JMP,,,88]
43 [DEC,k,5341496928, ]
44 [+,5341496864(j),1,temp14]
45 [=,5341496928(k),temp14,]
46 [%,5341496768(result),100,temp15]
47 [-,temp15,1,temp16]
48 [<,5341496928(k),temp16,temp17]
49 [IFNZ,temp17,,51]
50 [JMP,,,85]
51 [-,5341496928(k),5,temp18]
52 [==,temp18,5341496864(j),temp19]
53 [!,5341496864(j),,temp20]
54 [+,temp20,2,temp21]
55 [==,temp21,5341496928(k),temp22]
56 [-,5341496928(k),3,temp23]
57 [==,temp23,5341496864(j),temp24]
58 [&&,temp22,temp24,temp25]
59 [||,temp19,temp25,temp26]
60 [IFNZ,temp26,,62]
61 [JMP,,,69]
62 [DEC,i,5341497056, ]
63 [=,5341497056(i),0,]
64 [+,5341496864(j),1,temp27]
65 [%,5341496928(k),temp27,temp28]
66 [=,5341497056(i),temp28,]
67 [CALL,printf,{"1: %d\n",5341497056(i),},temp29]
68 [JMP,,,82]
69 [+,5341496864(j),3,temp30]
70 [==,5341496928(k),temp30,temp31]
71 [%,5341496928(k),2,temp32]
72 [==,temp32,0,temp33]
73 [&&,temp31,temp33,temp34]
74 [IFNZ,temp34,,76]
75 [JMP,,,81]
76 [+,5341496864(j),1,temp35]
77 [/,5341496928(k),temp35,temp36]
78 [=,5341496672(i),temp36,]
79 [CALL,printf,{"2: %d\n",5341496672(i),},temp37]
80 [JMP,,,82]
81 [CALL,printf,{"3: %d\n",5341496672(i),},temp38]
82 [+,5341496928(k),1,5341496928(k)]
83 [=,temp39,5341496928(k), ]
84 [JMP,,,46]
85 [=,temp40,5341496864(j), ]
86 [+,5341496864(j),1,5341496864(j)]
87 [JMP,,,39]
88 [RET,0,,]
