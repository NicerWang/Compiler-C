====== GRAMMER TREE ======
(60)->ROOT
(6)-->Function|Int
(2)--->ID:printf
(6)--->Parameters: 
(6)--->Statement>COMPOUND
(4)---->Statement>DECLARE
(4)----->Type: Int
(4)----->Statement>ASSIGN
(4)------>ID:n
(4)------>Number:5
(5)---->Statement>RET
(5)----->ID:n
(10)-->Function|Int
(7)--->ID:scanf
(10)--->Parameters: 
(10)--->Statement>COMPOUND
(9)---->Statement>RET
(9)----->Number:0
(60)-->EntryPoint
(60)--->Statement>COMPOUND
(14)---->Statement>DECLARE
(14)----->Type: Int
(14)----->Statement>ASSIGN
(14)------>ID:m
(14)------>Number:2
(15)---->Statement>DECLARE
(15)----->Type: Int
(15)----->Statement>ASSIGN
(15)------>ID:n
(15)------>Number:3
(18)---->Statement>CALL
(18)----->ID:scanf
(18)----->Arguments: 
(18)------>String:"%d"
(18)------>Expression
(18)------->Operator> & 
(18)------->ID:m
(19)---->Statement>CALL
(19)----->ID:printf
(19)----->Arguments: 
(19)------>String:"%d\n"
(19)------>Expression
(19)------->Expression
(19)-------->ID:m
(19)-------->Operator> + 
(19)-------->Number:100
(19)------->Operator> % 
(19)------->Number:2
(21)---->Statement>DECLARE
(21)----->Type: Int
(21)----->Statement>ASSIGN
(21)------>ID:i
(21)------>Number:0
(22)---->Statement>DECLARE
(22)----->Type: Int
(22)----->Statement>ASSIGN
(22)------>ID:factorial
(22)------>Number:3
(23)---->Statement>DECLARE
(23)----->Type: Int
(23)----->Statement>ASSIGN
(23)------>ID:result
(23)------>Number:1
(28)---->Statement>WHILE
(24)----->Expression
(24)------>ID:factorial
(24)------>Operator> > 
(24)------>Number:0
(28)----->Statement>COMPOUND
(26)------>Statement>ASSIGN
(26)------->ID:result
(26)------->Expression
(26)-------->ID:result
(26)-------->Operator> * 
(26)-------->ID:factorial
(27)------>Statement>ASSIGN
(27)------->ID:factorial
(27)------->Expression
(27)-------->ID:factorial
(27)-------->Operator> - 
(27)-------->Number:1
(29)---->Statement>CALL
(29)----->ID:printf
(29)----->Arguments: 
(29)------>String:"%d\n"
(29)------>Expression
(29)------->Expression
(29)-------->ID:result
(29)-------->Operator> % 
(29)-------->Number:100
(29)------->Operator> - 
(29)------->Number:1
(30)---->Expression
(30)----->ID:i
(30)----->Operator> ++ 
(58)---->Statement>FOR
(32)----->Statement>DECLARE
(32)------>Type: Int
(32)------>Statement>ASSIGN
(32)------->ID:j
(32)------->Number:0
(32)----->Expression
(32)------>Expression
(32)------->ID:result
(32)------->Operator> % 
(32)------->Number:100
(32)------>Operator> - 
(32)------>Number:1
(32)----->Expression
(32)------>ID:j
(32)------>Operator> ++ 
(58)----->Statement>COMPOUND
(57)------>Statement>FOR
(34)------->Statement>DECLARE
(34)-------->Type: Int
(34)-------->Statement>ASSIGN
(34)--------->ID:k
(34)--------->Expression
(34)---------->ID:j
(34)---------->Operator> + 
(34)---------->Number:1
(34)------->Expression
(34)-------->ID:k
(34)-------->Operator> < 
(34)-------->Expression
(34)--------->Expression
(34)---------->ID:result
(34)---------->Operator> % 
(34)---------->Number:100
(34)--------->Operator> - 
(34)--------->Number:1
(34)------->Expression
(34)-------->Operator> ++ 
(34)-------->ID:k
(57)------->Statement>COMPOUND
(56)-------->Statement>IF
(39)--------->Expression
(39)---------->Expression
(39)----------->Expression
(39)------------>ID:k
(39)------------>Operator> - 
(39)------------>Number:5
(39)----------->Operator> == 
(39)----------->ID:j
(39)---------->Operator> || 
(39)---------->Expression
(39)----------->Expression
(39)------------>Expression
(39)------------->Expression
(39)-------------->Operator> ! 
(39)-------------->ID:j
(39)------------->Operator> + 
(39)------------->Number:2
(39)------------>Operator> == 
(39)------------>ID:k
(39)----------->Operator> && 
(39)----------->Expression
(39)------------>Expression
(39)------------->ID:k
(39)------------->Operator> - 
(39)------------->Number:3
(39)------------>Operator> == 
(39)------------>ID:j
(44)--------->Statement>COMPOUND
(41)---------->Statement>DECLARE
(41)----------->Type: Int
(41)----------->Statement>ASSIGN
(41)------------>ID:i
(41)------------>Number:0
(42)---------->Statement>ASSIGN
(42)----------->ID:i
(42)----------->Expression
(42)------------>ID:k
(42)------------>Operator> % 
(42)------------>Expression
(42)------------->ID:j
(42)------------->Operator> + 
(42)------------->Number:1
(43)---------->Statement>CALL
(43)----------->ID:printf
(43)----------->Arguments: 
(43)------------>String:"1: %d\n"
(43)------------>ID:i
(56)--------->Statement>IF
(45)---------->Expression
(45)----------->Expression
(45)------------>ID:k
(45)------------>Operator> == 
(45)------------>Expression
(45)------------->ID:j
(45)------------->Operator> + 
(45)------------->Number:3
(45)----------->Operator> && 
(45)----------->Expression
(45)------------>Expression
(45)------------->ID:k
(45)------------->Operator> % 
(45)------------->Number:2
(45)------------>Operator> == 
(45)------------>Number:0
(49)---------->Statement>COMPOUND
(47)----------->Statement>ASSIGN
(47)------------>ID:i
(47)------------>Expression
(47)------------->ID:k
(47)------------->Operator> / 
(47)------------->Expression
(47)-------------->ID:j
(47)-------------->Operator> + 
(47)-------------->Number:1
(48)----------->Statement>CALL
(48)------------>ID:printf
(48)------------>Arguments: 
(48)------------->String:"2: %d\n"
(48)------------->ID:i
(56)---------->Statement>COMPOUND
(52)----------->Statement>CALL
(52)------------>ID:printf
(52)------------>Arguments: 
(52)------------->String:"3: %d\n"
(52)------------->ID:i
(59)---->Statement>RET
(59)----->Number:0
====== LEX RESULT ======
INT
ID printf 5383417376
LBS
RBS
LP
INT
ID n 5383444736
OP_ASSIGN
NUMBER 5
SEMI
RETURN
ID n 5383444736
SEMI
RP
INT
ID scanf 5383416496
LBS
RBS
LP
RETURN
NUMBER 0
SEMI
RP
INT
MAIN
LBS
RBS
LP
INT
ID m 5383445808
OP_ASSIGN
NUMBER 2
SEMI
INT
ID n 5383445456
OP_ASSIGN
NUMBER 3
SEMI
ID scanf 5383416496
LBS
COMMA
BIT_AND
ID m 5383445808
RBS
SEMI
ID printf 5383417376
LBS
COMMA
LBS
ID m 5383445808
OP_ADD
NUMBER 100
RBS
OP_MOD
NUMBER 2
RBS
SEMI
INT
ID i 5383445968
OP_ASSIGN
NUMBER 0
SEMI
INT
ID factorial 5383446224
OP_ASSIGN
NUMBER 3
SEMI
INT
ID result 5383446288
OP_ASSIGN
NUMBER 1
SEMI
WHILE
LBS
ID factorial 5383446224
GT
NUMBER 0
RBS
LP
ID result 5383446288
OP_ASSIGN
ID result 5383446288
OP_MUL
ID factorial 5383446224
SEMI
ID factorial 5383446224
OP_ASSIGN
ID factorial 5383446224
OP_SUB
NUMBER 1
SEMI
RP
ID printf 5383417376
LBS
COMMA
ID result 5383446288
OP_MOD
NUMBER 100
OP_SUB
NUMBER 1
RBS
SEMI
ID i 5383445968
OP_PP
SEMI
FOR
LBS
INT
ID j 5383447312
OP_ASSIGN
NUMBER 0
SEMI
ID result 5383446288
OP_MOD
NUMBER 100
OP_SUB
NUMBER 1
SEMI
ID j 5383447312
OP_PP
RBS
LP
FOR
LBS
INT
ID k 5383449392
OP_ASSIGN
ID j 5383447312
OP_ADD
NUMBER 1
SEMI
ID k 5383449392
LT
ID result 5383446288
OP_MOD
NUMBER 100
OP_SUB
NUMBER 1
SEMI
OP_PP
ID k 5383449392
RBS
LP
IF
LBS
ID k 5383449392
OP_SUB
NUMBER 5
EQ
ID j 5383447312
OR
NOT
ID j 5383447312
OP_ADD
NUMBER 2
EQ
ID k 5383449392
AND
ID k 5383449392
OP_SUB
NUMBER 3
EQ
ID j 5383447312
RBS
LP
INT
ID i 5383451280
OP_ASSIGN
NUMBER 0
SEMI
ID i 5383451280
OP_ASSIGN
ID k 5383449392
OP_MOD
LBS
ID j 5383447312
OP_ADD
NUMBER 1
RBS
SEMI
ID printf 5383417376
LBS
COMMA
ID i 5383451280
RBS
SEMI
RP
ELSE
IF
LBS
ID k 5383449392
EQ
ID j 5383447312
OP_ADD
NUMBER 3
AND
ID k 5383449392
OP_MOD
NUMBER 2
EQ
NUMBER 0
RBS
LP
ID i 5383445968
OP_ASSIGN
ID k 5383449392
OP_DIV
LBS
ID j 5383447312
OP_ADD
NUMBER 1
RBS
SEMI
ID printf 5383417376
LBS
COMMA
ID i 5383445968
RBS
SEMI
RP
ELSE
LP
ID printf 5383417376
LBS
COMMA
ID i 5383445968
RBS
SEMI
RP
RP
RP
RETURN
NUMBER 0
SEMI
RP
====== SYMBOL TABLE ======
INT n     5383444736
INT i     5383451280
INT k     5383449392
INT j     5383447312
INT result     5383446288
INT factorial     5383446224
INT i     5383445968
INT n     5383445456
INT m     5383445808
====== FUNCTIONS ======
printf     5383444528
scanf     5383445552
====== IntermediateCode ======
1 (FUNC,printf,{},_)
2 (DEC,n,5383444736,_)
3 (=,5383444736(n),5,_)
4 (RET,5383444736(n),_,_)
5 (ENDF,printf,_,_)
6 (FUNC,scanf,{},_)
7 (RET,0,_,_)
8 (ENDF,scanf,_,_)
9 (DEC,m,5383445808,_)
10 (=,5383445808(m),2,_)
11 (DEC,n,5383445456,_)
12 (=,5383445456(n),3,_)
13 (&,5383445808(m),_,temp0)
14 (CALL,scanf,{"%d",temp0,},temp1)
15 (+,5383445808(m),100,temp2)
16 (%,temp2,2,temp3)
17 (CALL,printf,{"%d\n",temp3,},temp4)
18 (DEC,i,5383445968,_)
19 (=,5383445968(i),0,_)
20 (DEC,factorial,5383446224,_)
21 (=,5383446224(factorial),3,_)
22 (DEC,result,5383446288,_)
23 (=,5383446288(result),1,_)
24 (>,5383446224(factorial),0,temp5)
25 (IFNZ,temp5,_,27)
26 (JMP,_,_,32)
27 (*,5383446288(result),5383446224(factorial),temp6)
28 (=,5383446288(result),temp6,_)
29 (-,5383446224(factorial),1,temp7)
30 (=,5383446224(factorial),temp7,_)
31 (JMP,_,_,24)
32 (%,5383446288(result),100,temp8)
33 (-,temp8,1,temp9)
34 (CALL,printf,{"%d\n",temp9,},temp10)
35 (=,temp11,5383445968(i),_)
36 (+,5383445968(i),1,5383445968(i))
37 (DEC,j,5383447312,_)
38 (=,5383447312(j),0,_)
39 (%,5383446288(result),100,temp12)
40 (-,temp12,1,temp13)
41 (IFNZ,,_,43)
42 (JMP,_,_,88)
43 (DEC,k,5383449392,_)
44 (+,5383447312(j),1,temp14)
45 (=,5383449392(k),temp14,_)
46 (%,5383446288(result),100,temp15)
47 (-,temp15,1,temp16)
48 (<,5383449392(k),temp16,temp17)
49 (IFNZ,,_,51)
50 (JMP,_,_,85)
51 (-,5383449392(k),5,temp18)
52 (==,temp18,5383447312(j),temp19)
53 (!,5383447312(j),_,temp20)
54 (+,temp20,2,temp21)
55 (==,temp21,5383449392(k),temp22)
56 (-,5383449392(k),3,temp23)
57 (==,temp23,5383447312(j),temp24)
58 (&&,temp22,temp24,temp25)
59 (||,temp19,temp25,temp26)
60 (IFNZ,temp26,_,62)
61 (JMP,_,_,69)
62 (DEC,i,5383451280,_)
63 (=,5383451280(i),0,_)
64 (+,5383447312(j),1,temp27)
65 (%,5383449392(k),temp27,temp28)
66 (=,5383451280(i),temp28,_)
67 (CALL,printf,{"1: %d\n",5383451280(i),},temp29)
68 (JMP,_,_,82)
69 (+,5383447312(j),3,temp30)
70 (==,5383449392(k),temp30,temp31)
71 (%,5383449392(k),2,temp32)
72 (==,temp32,0,temp33)
73 (&&,temp31,temp33,temp34)
74 (IFNZ,temp34,_,76)
75 (JMP,_,_,81)
76 (+,5383447312(j),1,temp35)
77 (/,5383449392(k),temp35,temp36)
78 (=,5383445968(i),temp36,_)
79 (CALL,printf,{"2: %d\n",5383445968(i),},temp37)
80 (JMP,_,_,82)
81 (CALL,printf,{"3: %d\n",5383445968(i),},temp38)
82 (+,5383449392(k),1,5383449392(k))
83 (=,temp39,5383449392(k),_)
84 (JMP,_,_,46)
85 (=,temp40,5383447312(j),_)
86 (+,5383447312(j),1,5383447312(j))
87 (JMP,_,_,39)
88 (RET,0,_,_)
