====== GRAMMER TREE ======
->ROOT(11)
-->Function|Int(4)
--->ID:do_it(1)
--->Parameters: (4)
---->n|INT(1)
--->Statement>COMPOUND(4)
---->Statement>RET(3)
----->Expression(3)
------>ID:n(3)
------>Operator> % (3)
------>Number:2(3)
-->EntryPoint(11)
--->Statement>COMPOUND(11)
---->Statement>DECLARE(8)
----->Type: Int(8)
----->Statement>ASSIGN(8)
------>ID:i(8)
------>Number:0(8)
---->Statement>CALL(9)
----->ID:printf(9)
----->Arguments: (9)
------>String:"%d"(9)
------>Statement>CALL(9)
------->ID:do_it(9)
------->Arguments: (9)
-------->Number:5(9)
---->Statement>RET(10)
----->Number:0(10)
====== LEX RESULT ======
INT
ID do_it 5140147776
LBS
INT
ID n 5140150816
RBS
LP
RETURN
ID n 5140150816
OP_MOD
NUMBER 2
SEMI
RP
INT
MAIN
LBS
RBS
LP
INT
ID i 5140151568
OP_ASSIGN
NUMBER 0
SEMI
ID printf ~
LBS
COMMA
ID do_it 5140147776
LBS
NUMBER 5
RBS
RBS
SEMI
RETURN
NUMBER 0
SEMI
RP
====== SYMBOL TABLE ======
INT n     5140150816
INT i     5140151568
====== FUNCTIONS ======
do_it     5140150720
====== IntermediateCode ======
1 (FUNC,do_it,{#5140150816,},_)
2 (%,#5140150816,2,temp0)
3 (RET,temp0,_,_)
4 (ENDF,do_it,_,_)
5 (=,#5140151568,0,_)
6 (CALL,do_it,{5,},temp1)
7 (CALL,printf,{"%d",temp1,},temp2)
8 (RET,0,_,_)
====== Optimized IntermediateCode ======
1 1 (FUNC,do_it,{#5140150816,},_)
2 2 (%,#5140150816,2,temp0)
3 3 (RET,temp0,_,_)
4 4 (ENDF,do_it,_,_)
5 6 (CALL,do_it,{5,},temp1)
6 7 (CALL,printf,{"%d",temp1,},temp2)
7 8 (RET,0,_,_)
